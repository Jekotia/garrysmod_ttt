ttt_randomat_auto 1 //Default: 0 - Whether the Randomat should automatically trigger on round start.ttt_randomat_auto_min_rounds 0 //Default: 0 - The minimum number of completed rounds before auto-Randomat can trigger.ttt_randomat_auto_chance 1 //Default: 1 - Chance of the auto-Randomat triggering.ttt_randomat_auto_silent 0 //Default: 0 - Whether the auto-started event should be silent.ttt_randomat_auto_choose 0 //Default: 0 - Whether the auto-started event should be "Choose".ttt_randomat_chooseevent 0 //Default: 0 - Allows you to choose out of a selection of events.ttt_randomat_rebuyable 0 //Default: 0 - Whether you can buy more than one Randomat.ttt_randomat_event_weight 1 //Default: 1 - The default selection weight each event should use.ttt_randomat_event_hint 1 //Default: 1 - Whether the Randomat should print what each event does when they start.ttt_randomat_event_hint_chat 1 //Default: 1 - Whether hints should also be put in chat.ttt_randomat_event_history 10 //def: 10 - How many events should be kept in history. Events in history will are ignored when searching for a random event to start.ttt_randomat_allow_client_list 1 //def: 1 - Whether to allow the clients to have the "Active Events" label and list available.// #BringBackOldJester
// Converts the Swapper to a Jester
ttt_randomat_oldjester 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_oldjester_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_oldjester_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// A Glitch has been patched
// Changes a random Glitch into either an Innocent or a Traitor. There is a configurable chance that the player will be turned into an Innocent rather than a Traitor.
ttt_randomat_patched 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_patched_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_patched_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_patched_chance 50 //Default: 50 - The chance of the Glitch being made a Traitor.

// A player is acting suspicious
// Changes a random player to either a Jester or a Traitor. There is a configurable chance that the player will be turned into a Jester rather than a Traitor.
ttt_randomat_suspicion 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_suspicion_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_suspicion_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_suspicion_chance 50 //Default: 50 - The chance of the player being a Jester.

// A power you can't learn from the Jedi
// aka He could save others from death, but not himself
// aka ycarcomeD
// Cast your vote to save a player from dying one time. Vote will only happen once.
ttt_randomat_reversedemocracy 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_reversedemocracy_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_reversedemocracy_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_reversedemocracy_timer 40 //Default: 40 - The number of seconds each round of voting lasts.
randomat_reversedemocracy_tiesaves 1 //Default: 1 - Whether ties result in a coin toss; otherwise, nobody is saved.
randomat_reversedemocracy_totalpct 50 //Default: 50 - % of player votes needed for a vote to pass, set to 0 to disable.
randomat_reversedemocracy_show_votes 1 //Default: 1 - Whether to show when a target is voted for in chat.
randomat_reversedemocracy_show_votes_anon 0 //Default: 0 - Whether to hide who voted in chat.

// A Random Person will explode every X seconds! Watch out! (EXCEPT DETECTIVES)
// This one is pretty self-explanatory. Detraitors are also excluded from explosion.
ttt_randomat_explode 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_explode_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_explode_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_explode_timer 30 //Default: 30 - The time between explosions.

// A traitor will explode in X seconds!
// This one is pretty self-explanatory
ttt_randomat_texplode 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_texplode_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_texplode_weight 1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_texplode_timer 60 //Default: 60 - The time before the traitor explodes.
randomat_texplode_radius 600 //Default: 600 - Radius of the traitor explosion.

// An innocent has been upgraded!
// A random vanilla innocent is upgraded to a Mercenary or is given the choice of becoming a Mercenary or a Killer
ttt_randomat_upgrade 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_upgrade_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_upgrade_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_upgrade_chooserole 1 //Default: 1 - Whether the innocent should choose their new role.

// Bad Gas
// Drops random grenades (from the enabled types) at random players' feet on a configurable interval
ttt_randomat_gas 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_gas_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_gas_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_gas_timer 15 //Default: 15 - Changes the time between grenade drops.
randomat_gas_affectall 0 //Default: 0 - Set to 1 for the event to drop a grenade at everyone's feet on trigger.
randomat_gas_discombob 1 //Default: 1 - Whether discombobs drop.
randomat_gas_incendiary 1 //Default: 0 - Whether incendiaries drop.
randomat_gas_smoke 1 //Default: 0 - Whether smokes drop.

// Bad Trip
// Causes any player who is off the ground (by jumping, falling, etc.) to turn into a ragdoll temporarily
ttt_randomat_ragdoll 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_ragdoll_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_ragdoll_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_ragdoll_time 1.5 //Default: 1.5 - The time the player is ragdolled.
randomat_ragdoll_delay 1.5 //Default: 1.5 - The time between ragdolls.

// Barrel (In)Justice
// Explodes barrels if a player gets too close and then spawns more
ttt_randomat_barrelinjustice 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_barrelinjustice_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_barrelinjustice_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_barrelinjustice_count 2 //Default: 2 - Number of barrels spawned after one is exploded.
randomat_barrelinjustice_range 100 //Default: 100 - Minimum distance from the player for a barrel to explode

// Betrayed
// Randomly converts one vanilla Traitor to be a Glitch
ttt_randomat_betrayed 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_betrayed_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_betrayed_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Big Head Mode
// Causes all players to have their heads grow to massive proportions.
// NOTE: Not all custom models are supported -- some have their hair detached from their head which looks creepy when the head scales the hair doesn't. I tried a few ways to fix it but that ended up breaking other stuff.
ttt_randomat_bighead 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_bighead_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_bighead_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_bighead_scale 2 //Default: 2 - Head size multiplier.

// Black Market Buyout
// Disables Traitor and Detective shop, but periodically gives out free items from both
ttt_randomat_blackmarket 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_blackmarket_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_blackmarket_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
//randomat_blackmarket_blocklist  //Default: - The comma-separated list of weapon IDs to not give out. For example: "ttt_m9k_harpoon,weapon_ttt_slam".
randomat_blackmarket_timer_traitor 25 //Default: 25 - How often (in seconds) traitors should get items.
randomat_blackmarket_timer_detective 15 //Default: 15 - How often (in seconds) detectives should get items.

// Blerg!
// ala Blegh!
// ala Blergh!
// ala Bleh!
// ala Blarg!
// Players respawn repeatedly unless killed during a brief window where they can't use weapons
ttt_randomat_blerg 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_blerg_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_blerg_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_blerg_respawntimer 60 //Default: 60 - Delay before dead players respawn.
randomat_blerg_respawnlimit 3 //Default: 3 - The maximum number of times a player can respawn.
randomat_blerg_weapondelay 20 //Default: 20 - Delay before respawned can use weapons.

// Blind Traitors
// Blinds all traitors for a configurable amount of seconds
ttt_randomat_blind 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_blind_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_blind_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_blind_duration 15 //Default: 15 - The duration the players should be blinded for.

// Bomberman
// Spawns an explosive barrel behind a player when they crouch
ttt_randomat_bomberman 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_bomberman_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_bomberman_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Boo!
// Allows dead players to scare their target and make them drop their weapon
ttt_randomat_boo 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_boo_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_boo_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_boo_charge_time 30 //Default: 30 - How many seconds it takes to charge the next attack.
randomat_boo_ghost_time 5 //Default: 5 - How many seconds the ghost lasts.

// Breadcrumbs
// Follow the colorful trails to find the other players
ttt_randomat_breadcrumbs 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_breadcrumbs_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_breadcrumbs_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_breadcrumbs_start_width 30 //Default: 30 - The trail's starting width.
randomat_breadcrumbs_end_width 1 //Default: 1 - The trail's ending width.
randomat_breadcrumbs_fade_time 3 //Default: 3 - How many seconds the trail should last.

// Bullseye
// Only headshots do damage
ttt_randomat_bullseye 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_bullseye_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_bullseye_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Butterfingers
// Causes weapons to periodically slip out of players' hands
ttt_randomat_butter 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_butter_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_butter_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_butter_timer 10 //Default: 10 - The time between each weapon drop.
randomat_butter_affectall 0 //Default: 0 -Whether to affect every player at once rather than just a single random player.

// Camp Fire
// Sets any player that is camping (has not moved far enough in the configurable time) on fire. Any player who is set on fire this way will be extinguished when they move.
ttt_randomat_campfire 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_campfire_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_campfire_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_campfire_timer 20 //Default: 20 - Amount of time (in seconds) a player must camp before they are punished.
randomat_campfire_distance 35 //Default: 35 - The distance a player must move before they are considered not camping anymore.

// Can't stop, won't stop.
// Causes every player to constantly move forward
ttt_randomat_cantstop 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_cantstop_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_cantstop_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_cantstop_disableback 1 //Default: 1 - Whether the "s" key is disabled.

// Care Package
// Spawns an ammo crate somewhere in the map that contains a free item from the various role shops.
ttt_randomat_package 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_package_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_package_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
//randomat_package_blocklist  //Default: - The comma-separated list of weapon IDs to not give out. For example: "ttt_m9k_harpoon,weapon_ttt_slam".

// Careful...
// Set all Jesters and Swappers to a reduced (and configurable) amount of health.
ttt_randomat_careful 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_careful_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_careful_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_careful_health 1 //Default: 1 - Health to set Jester/Swapper to.

// Chamber Pop
// Weapons explode if you try to fire them while empty
ttt_randomat_chamberpop 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_chamberpop_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_chamberpop_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_chamberpop_explosion_magnitude 150 //Default: 150 - Weapon explosion magnitude.

// Choose an Event!
// Presents random events to be chosen, either by a single player or by vote
ttt_randomat_choose 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_choose_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_choose_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_choose_choices 3 //Default: 3 - Number of events you can choose from.
randomat_choose_vote 0 //Default: 0 - Allows all players to vote on the event.
randomat_choose_votetimer 10 //Default: 10 - How long players have to vote on the event.
randomat_choose_deadvoters 0 //Default: 0 - Dead people can vote.
randomat_choose_secret 0 //Default: 0 - Whether to include secret events.
randomat_choose_limitchoosetime 0 //Default: 0 - Whether single player choosing has limited time.
randomat_choose_limitchoosetime_random 0 //Default: 0 - Whether to choose a random event if time runs out.

// Clownin' Around (aka We All Float Down Here)
// Converts a Jester/Swapper to a Killer Clown

ttt_randomat_clowninaround 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_clowninaround_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_clowninaround_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Come on and SLAM!
// Gives everyone an M4 SLAM and only allows players to use the M4 SLAM for the duration of the event. Will not trigger if there is a Jester or a Swapper since they cannot win during this event.
ttt_randomat_slam 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_slam_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_slam_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_slam_timer 3 //Default: 3 - Time between being given slams.
randomat_slam_strip 1 //Default: 1 - The event strips your other weapons.
//randomat_slam_weaponid  //Default: weapon_ttt_slam - Id of the weapon given.

// Communism! Time to learn how to share...!
// Whenever anyone buys a weapon from a shop, all other players get that weapon too. They must not have anything in that slot already.
ttt_randomat_communist 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_communist_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_communist_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_communist_show_roles 1 //Default: 1 - Whether to show the role of the purchasing player.

// Compulsive Reloading
// Slowly drains a user's ammo over time if they haven't fired recently.
ttt_randomat_reload 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_reload_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_reload_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_reload_wait_time 5 //Default: 5.0 - Seconds after last shot to wait before draining.
randomat_reload_drain_time 2 //Default: 2.0 - Seconds between each ammo drain.
randomat_reload_keep_ammo 1 //Default: 1 - Whether drained ammo is kept (1) or destroyed (0).
randomat_reload_affectbuymenu 0 //Default: 0 - Whether buy menu weapons lose ammo too.

// Crabs are People
// Spawns a configurable number of hostile headcrabs when a player is killed
ttt_randomat_crabs 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_crabs_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_crabs_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_crabs_count 5 //Default: 5 - The amount of crabs spawned when someone dies.

// Dead Men Tell ALL Tales
// Allows dead players to text chat with the living
ttt_randomat_deadchat 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_deadchat_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_deadchat_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Dead Men Tell No Tales
// Prevents corpses from being searched
ttt_randomat_search 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_search_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_search_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Delayed Reaction
// Delays damage done to players for the configured amount of time
ttt_randomat_delayedreaction 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_delayedreaction_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_delayedreaction_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_delayedreaction_time 5 //Default: 5 - The time in seconds that damage should be delayed.

// Derptective
// Forces the detective(s) and detraitor(s) to use the M249 H.U.G.E. with infinite ammo and an adjusted rate of fire.
ttt_randomat_derptective 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_derptective_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_derptective_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_derptective_rate_of_fire 2 //Default: 2 - Rate of Fire multiplier for the H.U.G.E..

// Detraitor
// The Detective has been corrupted and joined the Traitor team!
ttt_randomat_detraitor 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_detraitor_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_detraitor_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Don't be so Sensitive
// Periodically changes each player's mouse sensitivity to a number within the configurable range
ttt_randomat_sensitive 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_sensitive_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_sensitive_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_sensitive_change_interval 15 //Default: 15 - How often to change each player's sensitivity.
randomat_sensitive_scale_min 25 //Default: 25 - The minimum sensitivity to use.
randomat_sensitive_scale_max 500 //Default: 500 - The maximum sensitivity to use.

// Don't. Blink.
// Spawns a configurable number of Weeping Angels, each attached to a different player. The Weeping Angel will kill their assigned player when the player's back is turned
ttt_randomat_blink 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_blink_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_blink_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_blink_cap 12 //Default: 12 - Maximum number of Weeping Angels spawned.
randomat_blink_delay 0 //Default: 0.5 - Delay before Weeping Angels are spawned.

// Don't Let it Go to Your Head
// Grows a player's head by a set amount each time they kill. Also grows by the same size of their victim's head.
ttt_randomat_headgrow 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_headgrow_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_headgrow_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_headgrow_max 2 //Default: 2.5 - The maximum head size multiplier.
randomat_headgrow_per_kill 0 //Default: 0.25 - The head size increase per kill.
randomat_headgrow_steal 1 //Default: 1 - Whether to steal a player's head size on kill.

// Double Cross
// Changes a random vanilla Innocent into either a Glitch or a Traitor. There is a configurable chance that the player will be turned into a Glitch rather than a Traitor.
ttt_randomat_doublecross 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_doublecross_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_doublecross_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_doublecross_chance 50 //Default: 50 - The chance of the Innocent being made a Traitor.

// Double-Edged Sword
// Reflects 1/2 of the damage you do back on yourself, but you also heal self-damage slowly.
ttt_randomat_doubleedge 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_doubleedge_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_doubleedge_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_doubleedge_interval 1 //Default: 1 - How often (in seconds) to heal self-damage.
randomat_doubleedge_amount 2 //Default: 2 - How much self-damage to heal per interval.

// Down Under
// Flips your view upside-down
ttt_randomat_downunder 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_downunder_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_downunder_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Earthquake
// Moves all props, ammo, and weapons a random amount in a random direction.
ttt_randomat_earthquake 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_earthquake_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_earthquake_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
//randomat_earthquake_blocklist  //Default: - The comma-separated list of maps to not allow this map on. For example: "ttt_lego,gm_flatgrass".

// Election Day
// Starts a two-part election. In the first part, players will nominate other players to become the president. The detective is not allowed to be nominate as they are already a President (per the GET DOWN MR. PRESIDENT Event).
// In the second part of the election, the two nominees with the most nominations will take part in a run-off vote, winner takes all.
// If a member of the innocent team wins, they are promoted to a Detective and given credits as a reward.
// If a member of the traitor team wins, all traitors are given credits as a reward, but the new President's role is revealed.
// If a Jester wins, they are killed by whoever owned the Randomat, winning the round.
// If a Swapper wins, they are killed by a random player, after which they swap roles.
// If a Killer wins, all non-Jester/Swapper players are killed, winning the round for the Killer.
// If a Zombie wins, the RISE FROM YOUR GRAVE event is triggered, silently.
// If a Vampire wins, the configured team (see randomat_election_vamp_turn_innocents below) are converted to Vampires.
// If a Drunk wins, they will instantly remember what role they are supposed to be.
// If the Old Man wins, everyone else will become as frail as they are (e.g. reduced to 1 health).
// If the Clown wins, whichever team (Innocent or Traitor) has more players will be killed, causing the Clown to instantly trigger and go on a rampage. If only one team has players alive, a random living player from that team will be sacrificed to help the Clown toward victory.
// If the Beggar wins, an innocent or traitor team member will be chosen randomly to give the beggar a random shop weapon, causing the beggar to join that team.
// If the Bodysnatcher wins, they are given the role of a random dead player if there are any, or a random enabled role if there are no dead players.
// If a member of the independent team (that doesn't have a specific rule above) wins, they are healed to full or given bonus health if they are already near-full.
// If a member of the monster team (that doesn't have a specific rule above) wins, a random player (preferring a dead one, if there are any) are converted to the same role (and resurrected, if dead).
ttt_randomat_election 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_election_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_election_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_election_timer 40 //Default: 40 - The number of seconds each round of voting lasts.
randomat_election_winner_credits 2 //Default: 2 - The number of credits given as a reward, if appropriate.
randomat_election_vamp_turn_innocents 0 //Default: 0 - Whether Vampires turn innocents. Otherwise, turns traitors.
randomat_election_show_votes 1 //Default: 1 - Whether to show when a target is voted for in chat.
randomat_election_show_votes_anon 0 //Default: 0 - Whether to hide who voted in chat.
randomat_election_trigger_mrpresident 0 //Default: 0 - Whether to trigger Get Down Mr. President if an Innocent wins.
randomat_election_break_ties 0 //Default: 0 - Whether to break ties by choosing a random winner.

// Evasive Maneuvers
// Causes players who are shot to "dodge" out of the way of further bullets
ttt_randomat_evasive 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_evasive_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_evasive_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_evasive_force 2000 //Default: 2000 - Amount of force to push players with.
randomat_evasive_jumping_force 1000 //Default: 1000 - Amount of force to push jumping players with.

// Everything is as fast as Flash now! (XX% faster)
// Causes everything (movement, firing speed, timers, etc.) to run a configurable amount faster than normal
ttt_randomat_flash 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_flash_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_flash_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_flash_scale 50 //Default: 50 - The percentage the speed should increase. Treated as an additive increase on multiple uses (e.g. 1.0 -> 1.5 -> 2.0 (1.5 + 0.5) rather than 1.0 -> 1.5 -> 2.25 (1.5 + 1.5x0.5)

// Fan Favorite
// Cast your vote to resurrect a dead player
ttt_randomat_fanfavorite 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_fanfavorite_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_fanfavorite_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_fanfavorite_timer 40 //Default: 40 - The number of seconds each round of voting lasts.
randomat_fanfavorite_tiereses 1 //Default: 1 - Whether ties result in a coin toss; otherwise, nobody is resurrected.
randomat_fanfavorite_totalpct 50 //Default: 50 - % of player votes needed for a vote to pass, set to 0 to disable.
randomat_fanfavorite_show_votes 1 //Default: 1 - Whether to show when a target is voted for in chat.
randomat_fanfavorite_show_votes_anon 0 //Default: 0 - Whether to hide who voted in chat.

// Fault Lines
// Shakes all props, weapons, and ammo on the map with increasing severity
ttt_randomat_faultline 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_faultline_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_faultline_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process. randomat_faultline_min_delay  //Default: 20 - The minimum delay between quakes.
randomat_faultline_severity_max 10 //Default: 10 - The maximum severity the earthquakes will have.
randomat_faultline_aftershocks 3 //Default: 3 - The number of smaller quakes to happen after the peak.

// Fiends for Life
// Innocents win if they kill the jester, but traitors want them alive
ttt_randomat_killjester 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_killjester_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_killjester_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Flip the Script
// Inverses everyone's health
ttt_randomat_flipthescript 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_flipthescript_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_flipthescript_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Flu Season
// Randomly infects a player with the flu, causing them to sneeze occasionally. Also has a chance to spread to other players within a configurable distance
ttt_randomat_flu 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_flu_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_flu_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_flu_timer 1 //Default: 1 - Time a player must be near someone before it spreads.
randomat_flu_interval 10 //Default: 10 - How often effects happen to infected.
randomat_flu_distance 100 //Default: 100 - Distance a player must be from another to be considered "near".
randomat_flu_chance 25 //Default: 25 - Spreading chance.
randomat_flu_speed_factor 0 //Default: 0.8 - What speed the infected player should be reduced to.

// Fog of War
// Covers the map in a fog which restricts player view
ttt_randomat_fogofwar 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_fogofwar_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_fogofwar_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_fogofwar_default 1 //Default: 1.0 - The fog distance scale for non-traitors.
randomat_fogofwar_traitor 1 //Default: 1.5 - The fog distance scale for traitors.

// FREEZE!
// aka Winter has come at last.
// aka The Ice Man cometh.
// aka In this universe, there is only one absolute: everything freezes!
// aka Tonight, Hell freezes over.
// aka I'm afraid my condition has left me cold to your pleas of mercy.
// aka Cool party.
// aka You are not sending me to the cooler.
// aka Stay cool, bird boy.
// aka Alright, everyone! Chill!
// aka It's a cold town.
// aka Tonight's forecast: a freeze is coming!
// aka What killed the dinosaurs?! The ice age!
// aka Let's kick some ice!
// aka Can you feel it coming? The icy cold of space!
// aka Freeze in hell, Batman!

// All Innocents will Freeze (and become immune) every X seconds
ttt_randomat_freeze 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_freeze_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_freeze_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_freeze_duration 5 //Default: 5 - Duration of the Freeze (in seconds).
randomat_freeze_timer 30 //Default: 30 - How often (in seconds) the Freeze occurs.
randomat_freeze_hints 1 //Default: 1 - Whether to explain the event after triggering.

// Full of Crabs and Fire!
// Spawns hostile headcrabs and fire around the detective when they are killed
ttt_randomat_crabsandfire 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_crabsandfire_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_crabsandfire_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_crabsandfire_crab_count 5 //Default: 5 - The number of crabs to spawn.
randomat_crabsandfire_fire_count 5 //Default: 5 - The amount of fire to spawn.
randomat_crabsandfire_fire_length 20 //Default: 20 - How long the fire should last.\

// Gaining life for killing people? Is it really worth it...
// Heals players who kill other players
ttt_randomat_lifesteal 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_lifesteal_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_lifesteal_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_lifesteal_health 25 //Default: 25 - The health gained per kill.
randomat_lifesteal_cap 0 //Default: 0 - The maximum health a player can get from killing people. Set to 0 to disable.

// Gaseous Snake
// Turns everyone invisible but envelopes them in smoke
ttt_randomat_gaseous 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_gaseous_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_gaseous_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Get Down Mr. President!
// Gives Detectives extra health, but if they get killed, so do all other members of the Innocent team
ttt_randomat_president 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_president_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_president_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_president_bonushealth 100 //Default: 100 - Extra health gained by the detective.
randomat_president_announce 1 //Default: 1 - Whether to announce when the president dies.

// Get Down Mr. Romero!
// Gives Detectives extra health, but if they get killed, all living members of the Innocent team are converted to Zombies
ttt_randomat_romero 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_romero_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_romero_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_romero_bonushealth 100 //Default: 100 - Extra health gained by the detective.
randomat_romero_announce 1 //Default: 1 - Whether to announce when Mr. Romero dies.

// Ghostly Apparition
// Dead players become ghosts who leave a trail of smoke as they drift through the world
ttt_randomat_apparition 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_apparition_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_apparition_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Gifts from the Dead
// Allows dead players to give the living a single gift
ttt_randomat_gifts 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_gifts_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_gifts_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_gifts_charge_time 60 //Default: 60 - How many seconds before the dead can give a gift.
randomat_gifts_random_items 1 //Default: 1 - Whether everyone should get a random item to gift.
//randomat_gifts_blocklist  //Default: - The comma-separated list of weapon IDs to not give out. For example: "ttt_m9k_harpoon,weapon_ttt_slam".

// Glitch in the Matrix
// Changes everyone's role to be either Glitch or Traitor and gives a random shop item
ttt_randomat_glitch 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_glitch_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_glitch_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
//randomat_glitch_blocklist  //Default: - The comma-separated list of weapon IDs to not give out. For example: "ttt_m9k_harpoon,weapon_ttt_slam".
randomat_glitch_traitor_pct 25 //Default: 25 - The percentage of players that will be traitors.
randomat_glitch_damage_scale 1 //Default: 1.0 - The multiplier for damage that the Glitches will take.
randomat_glitch_max_glitches 0 //Default: 0 - The maximum number of Glitches this event will create. Setting to 0 will not limit the number of Glitches.
randomat_glitch_starting_health 100 //Default: 100 - The amount of health the Glitches should start with.
randomat_glitch_min_traitors 0 //Default: 0 - The minimum number of Traitors before this event will run.

// Good Cop, Bad Cop
// Instead of a detective, you now have two deputies... or is one an impersonator?
ttt_randomat_goodcopbadcop 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_goodcopbadcop_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_goodcopbadcop_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Got any connies?!
// Announces players that have shop items after a configurable number of seconds
ttt_randomat_connies 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_connies_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_connies_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_connies_timer 10 //Default: 10 - The amount of time before the messages are shown.
randomat_connies_show_role 0 //Default: 0 - Whether to show the role of the person.
randomat_connies_show_name 1 //Default: 1 - Whether to show the name of the person.
randomat_connies_show_equipment 0 //Default: 0 - Whether to show the equipment a person has.
randomat_connies_show_role_weapons 0 //Default: 0 - Whether to show the role-specific weapons a person has.\

// Gun Game
// Periodically gives players random weapons that would normally be found throughout the map
ttt_randomat_gungame 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_gungame_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_gungame_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_gungame_timer 5 //Default: 5 - Time between weapon changes.

// Gunpowder, Treason, and Plot
// Spawns explosive barrels around every player repeatedly until the event ends
ttt_randomat_barrels 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_barrels_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_barrels_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_barrels_count 3 //Default: 3 - Number of barrels spawned per person.
randomat_barrels_range 100 //Default: 100 - Distance barrels spawn from the player.
randomat_barrels_timer 60 //Default: 60 - Time between barrel spawns.

// Harpooooooooooooooooooooon!!
// Gives everyone a Harpoon and only allows players to use the Harpoon for the duration of the event.
ttt_randomat_harpoon 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_harpoon_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_harpoon_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_harpoon_timer 3 //Default: 3 - Time between being given harpoons.
randomat_harpoon_strip 1 //Default: 1 - The event strips your other weapons.
//randomat_harpoon_weaponid  //Default: ttt_m9k_harpoon - Id of the weapon given.

// Hedge Your Bets
// Dead players bet on who is going to live to the end. Winners are respawned to fight them.
ttt_randomat_bets 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_bets_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_bets_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Herd Immunity
// Players vote for what type of damage they will be immune to for the rest of the round
ttt_randomat_immunity 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_immunity_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_immunity_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_immunity_timer 30 //Default: 30 - The number of seconds the vote lasts.
randomat_immunity_bullet 0 //Default: 0 - Whether bullet damage can be voted for.
randomat_immunity_slashing 0 //Default: 0 - Whether slashing damage can be voted for.

// Honey, I shrunk the terrorists
// Scales each player's size by a configurable ratio
ttt_randomat_shrink 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_shrink_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_shrink_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_shrink_scale 0 //Default: 0.5 - The shrinking scale factor.

// I don't think you realise the gravity of the situation.
// Gravity is changed every few seconds for a short period of time before reverting to normal.
// It goes back and forth between being lowered and raised each time.
ttt_randomat_gravity 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_gravity_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_gravity_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_gravity_timer 30 //Default: 30 - How long between changes.
randomat_gravity_duration 3 //Default: 3 - How many seconds the change lasts.
randomat_gravity_minimum 70 //Default: 70 - The gravity when it is lowered.
randomat_gravity_maximum 2000 //Default: 2000 - The gravity when it is raised.

// I love democracy, I love the republic.
// Allows players to vote to kill someone repeatedly until the event ends
ttt_randomat_democracy 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_democracy_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_democracy_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_democracy_timer 40 //Default: 40 - The number of seconds each round of voting lasts.
randomat_democracy_tiekills 1 //Default: 1 - If 1, ties result in a coin toss; if 0, nobody dies in a tied vote.
randomat_democracy_totalpct 50 //Default: 50 - Percent of total player votes required for a vote to pass, set to 0 to disable.
randomat_democracy_jestermode 0 //Default: 0 - What to do when a jester team member is voted for. 0 - Kill a random player that voted for them. 1 - Kill the jester team member, activating their "ability" (NOTE: If the player is not a Jester or Swapper, this mode will behave like mode 0 instead). 2 - Let the jester team member choose who of their voters to kill.
randomat_democracy_show_jester_votes 1 //Default: 1 - Whether to show when a jester votes for revenge in chat. Used for jestermode 2 only.
randomat_democracy_show_votes 1 //Default: 1 - Whether to show when a target is voted for in chat.
randomat_democracy_show_votes_anon 0 //Default: 0 - Whether to hide who voted in chat.

// I see dead people
// Drops a Visualizer whenever a player is killed
ttt_randomat_visualiser 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_visualiser_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_visualiser_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// I'm feeling kinda ILL
// Causes players to slowly lose health over time
ttt_randomat_feelingill 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_feelingill_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_feelingill_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_feelingill_timer 3 //Default: 3 - How often (in seconds) a player will lose health.
randomat_feelingill_health 1 //Default: 1 - How much health per tick you lose.

// Incriminating Evidence
// Forces a random player to say something incriminating without their knowledge
ttt_randomat_incriminating 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_incriminating_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_incriminating_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_incriminating_timer_min 3 //Default: 3 - The minimum time before the message is sent.
randomat_incriminating_timer_max 10 //Default: 10 - The maximum time before the message is sent.
randomat_incriminating_mistake_chance 0 //Default: 0.2 - The chance that an "oops" message is sent.

// Infinite Ammo!
// Gives all weapons infinite ammo, allowing players to constantly shoot without reloading
ttt_randomat_ammo 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_ammo_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_ammo_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_ammo_affectbuymenu 0 //Default: 0 - Whether it gives buy menu weapons infinite ammo too.

// Infinite Credits for Everyone!
// Gives all players essentially infinite credits for use in their shop menus (if they have one)
ttt_randomat_credits 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_credits_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_credits_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Insurance Policy
// Players gain a credit every X damage they take
ttt_randomat_insurance 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_insurance_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_insurance_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_insurance_damage 20 //Default: 20 - How much damage before a player gets paid.

// It's hunting season!
// Randomly turns a vanilla Innocent into an active Loot Goblin
ttt_randomat_huntingseason 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_huntingseason_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_huntingseason_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_huntingseason_delay 5 //Default: 5 - How much damage before a player gets paid.
randomat_huntingseason_show_name 1 //Default: 1 - Whether to show the target player's name in the event title.

// It's over Anakin! I have the high ground!
// Does damage over time to the player who is closest to the ground
ttt_randomat_highground 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_highground_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_highground_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_highground_damage 1 //Default: 1 - The amount of health the player will lose each interval.
randomat_highground_damage_delay 10 //Default: 10 - The delay before damage starts.
randomat_highground_damage_interval 2 //Default: 2 - How often the player will take damage.

// Jump Around!
// Players can only move by multi-jumping
// NOTE: Only runs if a double-jump mod which supports the "multijump_default_jumps" convar is running
ttt_randomat_jumparound 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_jumparound_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_jumparound_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_jumparound_jumps 5 //Default: 5 - How many multi-jumps the players can do.

// Life Insurance
// Traitors get credits when one of their teammates is killed
ttt_randomat_lifeinsurance 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_lifeinsurance_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_lifeinsurance_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_lifeinsurance_first_traitor 0 //Default: 0 - Whether only first traitor death pays.
randomat_lifeinsurance_first_per_player 1 //Default: 1 - Whether only first death per player pays.
randomat_lifeinsurance_payment 3 //Default: 3 - Amount of credits to pay.

// Lonely Yogs
// Drops a discombob between two players who get too close
ttt_randomat_lonelyyogs 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_lonelyyogs_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_lonelyyogs_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_lonelyyogs_distance 200 //Default: 200 - The minimum distance allowed between players.
randomat_lonelyyogs_interval 2 //Default: 2 - The number of seconds between discombob blasts.

// Loose Clips
// Sprinting causes your gun clip to fall out, forcing reloads
ttt_randomat_looseclips 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_looseclips_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_looseclips_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_looseclips_keep_ammo 1 //Default: 1 - Whether drained ammo is kept or destroyed.
randomat_looseclips_affectbuymenu 0 //Default: 0 - Whether buy menu weapons lose ammo too.

// Malfunction
// Causes players to randomly shoot their gun
ttt_randomat_malfunction 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_malfunction_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_malfunction_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_malfunction_upper 15 //Default: 15 - The upper limit for the random timer.
randomat_malfunction_lower 1 //Default: 1 - The lower limit for the random timer.
randomat_malfunction_affectall 0 //Default: 0 - Set to 1 for the event to affect everyone at once.
randomat_malfunction_duration 0 //Default: 0.5 - Duration of gun malfunction (set to 0 for 1 shot).

// Meet Cute
// Causes players who collide while sprinting to swap inventories
ttt_randomat_meetcute 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_meetcute_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_meetcute_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_meetcute_distance 1400 //Default: 1400 - The maximum distance between two players to be considered 'touching'.
randomat_meetcute_swap_delay 5 //Default: 5 - The minimum delay (in seconds) between swaps.

// Narration
// Narrates common game activities
ttt_randomat_narration 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_narration_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_narration_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// No more Fall Damage!
// Prevents any player from taking damage when they fall
ttt_randomat_falldamage 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_falldamage_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_falldamage_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// NO NERD HEALING
// Prevents any player from regaining lost health
ttt_randomat_noheal 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_noheal_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_noheal_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// No one can die from my sight
// Puts a green outline around every dead player
ttt_randomat_corpsehighlight 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_corpsehighlight_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_corpsehighlight_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// No one can hide from my sight
// Puts a green outline around every player
ttt_randomat_wallhack 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_wallhack_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_wallhack_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// NOT THE BEES
// Spawns bees randomly around players
ttt_randomat_bees 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_bees_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_bees_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_bees_count 4 //Default: 4 - The number of bees spawned per player.

// Olympic Sprint (aka Infinite Sprint)
// Disables sprint stamina consumption, allowing players to sprint forever.
// NOTE: Only works with the latest Custom Roles version and will auto-disable on older versions.
ttt_randomat_olympicsprint 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_olympicsprint_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_olympicsprint_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// One traitor, One Detective. Everyone else is a Jester. Detective is stronger.
// This one is pretty self-explanatory except for the "Detective is stronger" part. That just means the detective has 200 health.
// NOTE: This event is automatically disabled in the outdated version of Custom Roles for TTT. This is due to an issue where the round would not end if a Jester was killed and there were multiple Jesters.
ttt_randomat_jesters 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_jesters_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_jesters_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Opposite Day
// Swaps movement keys to their opposites (e.g. Left is Right, Forward is Backward) and swaps the Fire and Reload keys.
// NOTE: Sprinting will only work when going backwards in the outdated version of Custom Roles for TTT.
ttt_randomat_opposite 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_opposite_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_opposite_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_opposite_hardmode 1 //Default: 1 - Whether to enable hard mode and switch Jump/Crouch.

// Our Little Secret
// Pairs players together, temporarily revealing their roles after a short delay
ttt_randomat_oursecret 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_oursecret_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_oursecret_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_oursecret_min_delay 15 //Default: 15 - The minimum delay before showing role.
randomat_oursecret_max_delay 30 //Default: 30 - The maximum delay before showing role.
randomat_oursecret_highlight_time 5 //Default: 5 - How long to show the player's role color.

// Paranoid
// Periodically plays gun and death sounds randomly around players
ttt_randomat_paranoid 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_paranoid_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_paranoid_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_paranoid_timer_min 15 //Default: 15 - The minimum time before the sound should play.
randomat_paranoid_timer_max 30 //Default: 30 - The maximum time before the sound should play.
randomat_paranoid_shots_min 2 //Default: 2 - The minimum times the sound should play.
randomat_paranoid_shots_max 6 //Default: 6 - The maximum times the sound should play.
randomat_paranoid_volume 125 //Default: 125 - The volume the sound should play at.
//randomat_paranoid_blocklist  //Default: weapon_pulserif,weapon_ttt_dislocator,tfa_jetgun - The comma-separated list of weapon IDs to not use for sounds. For example: "weapon_pulserif,weapon_ttt_dislocator".

// Paranormal Activity
// Allows the dead to buff or debuff their targets
ttt_randomat_specbuff 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_specbuff_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_specbuff_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_specbuff_charge_time 60 //Default: 60 - How many seconds it takes to charge to full power.
randomat_specbuff_heal_power 75 //Default: 75 - The amount of power to heal the target.
randomat_specbuff_heal_amount 10 //Default: 10 - The amount of to heal the target.
randomat_specbuff_fast_power 25 //Default: 25 - The amount of power to make the target faster.
randomat_specbuff_fast_factor 1 //Default: 1.2 - The speed factor for target when fast.
randomat_specbuff_fast_timer 3 //Default: 3 - How long the effect lasts.
randomat_specbuff_slow_power 25 //Default: 25 - The amount of power to slow the target.
randomat_specbuff_slow_factor 0 //Default: 0.8 - The speed factor for target when slow.
randomat_specbuff_slow_timer 3 //Default: 3 - How long the effect lasts.
randomat_specbuff_slap_power 75 //Default: 75 - The amount of power to slap the target.
randomat_specbuff_slap_force 500 //Default: 500 - How hard to slap the target.

// Partial Mayhem
// Causes players to explode when killed by teammates
ttt_randomat_partialmayhem 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_partialmayhem_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_partialmayhem_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Poltergeists
// Allows dead players to see and activate traitor traps
ttt_randomat_poltergeists 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_poltergeists_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_poltergeists_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// praW emiT (aka Reverse Time Warp)
// Causes everything (movement, firing speed, timers, etc.) to run a configurable amount slower than normal and intensifies on a configurable interval
ttt_randomat_reversetimewarp 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_reversetimewarp_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_reversetimewarp_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_reversetimewarp_scale 15 //Default: 15 - The percentage the speed should decrease. Treated as an subtractive decrease on multiple uses (e.g. 1.0 -> 0.85 -> 0.7 (0.85 - 0.15) rather than 1.0 -> 0.85 -> 0.1275 (0.85 - 0.85x0.15).
randomat_reversetimewarp_scale_min 0 //Default: 0.15 - The minimum scale the speed should decrease to.
randomat_reversetimewarp_timer 15 //Default: 15 - How often (in seconds) the speed will be decreased.

// Praw emiTime Warp (aka Time Flip)
// Time scale is changed every few seconds for a short period of time before reverting to normal
ttt_randomat_timeflip 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_timeflip_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_timeflip_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_timeflip_timer 30 //Default: 30 - How often the time scale should change.
randomat_timeflip_duration_slow 3 //Default: 3 - How long the time scale should change for when slow.
randomat_timeflip_duration_fast 30 //Default: 30 - How long the time scale should change for when fast.
randomat_timeflip_minimum 0 //Default: 0.33 - The minimum time scale.
randomat_timeflip_maximum 2 //Default: 2.5 - The maximum time scale.

// Prop Hunt
// Converts all Jester/Swapper and innocent team members to the Innocent role, strip their weapons, and gives them a Prop Disguiser. Converts all monster and traitor team members to the Traitor role.
ttt_randomat_prophunt 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_prophunt_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_prophunt_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_prophunt_timer 3 //Default: 3 - Time between being given prop disguisers.
randomat_prophunt_strip 1 //Default: 1 - The event strips your other weapons.
randomat_prophunt_blind_time = Default: 0 - How long to blind the hunters for at the start.
randomat_prophunt_round_time = Default: 0 - How many seconds the Prop Hunt round should last.
//randomat_prophunt_weaponid  //Default: weapon_ttt_prophide - Id of the weapon given.
randomat_prophunt_shop_disable 0 //Default: 0 - Whether to disable the weapon shop.
randomat_prophunt_props_join_hunters 0 //Default: 0 - Whether to have the props join the hunters when they are killed.
randomat_prophunt_specs_join_hunters 0 //Default: 0 - Whether to have the spectators join the hunters when the event starts.

// Pump You Up
// Vote to buff a player. Votes can be changed at any time
ttt_randomat_pumpyouup 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_pumpyouup_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_pumpyouup_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_pumpyouup_buff 0 //Default: 0 - Which buff the target should get. 0 - Damage, 1 - Speed, 2 - Health regeneration, 3 - Damage resistance.
randomat_pumpyouup_damage_scale 1 //Default: 1.1 - Target damage modifier (1.1 == 110% or a 10% bonus).
randomat_pumpyouup_speed_factor 1 //Default: 1.2 - Target speed modifier (1.1 == 110% or a 10% bonus).
randomat_pumpyouup_regen_timer 0 //Default: 0.66 - How often (in seconds) the target should be healed.
randomat_pumpyouup_shield_factor 0 //Default: 0.25 - Percent less damage the target should take.
randomat_pumpyouup_allow_self_vote 0 //Default: 0 - Whether to allow players to vote for themselves.
randomat_pumpyouup_show_votes 1 //Default: 1 - Whether to show when a target is voted for in chat.
randomat_pumpyouup_show_votes_anon 0 //Default: 0 - Whether to hide who voted in chat.

// Quake Pro
// Increases each player's Field of View (FOV) so it looks like you're playing Quake
ttt_randomat_fov 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_fov_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_fov_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_fov_scale 1 //Default: 1.5 - Scale of the FOV increase.
randomat_fov_scale_ironsight 1 //Default: 1.0 - Scale of the FOV increase when ironsighted.

// Random Health for everyone!
// Gives everyone a random amount of health within the configurable boundaries
ttt_randomat_randomhealth 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_randomhealth_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_randomhealth_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_randomhealth_upper 100 //Default: 100 - The upper limit of health gained.
randomat_randomhealth_lower 0 //Default: 0 - The lower limit of health gained.

// Random xN
// Triggers a configurable number of random events, one every 5 seconds
ttt_randomat_randomxn 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_randomxn_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_randomxn_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_randomxn_triggers 5 //Default: 5 - Number of Randomat events activated.
randomat_randomxn_timer 5 //Default: 5 - How often (in seconds) a random event will be triggered.
randomat_randomxn_multiple 1 //Default: 1 - Allow event to run multiple times.
randomat_randomxn_triggerbyotherrandom 1 //Default: 1 - Allow being triggered by other events like Randomness Intensifies.

// Randomness Intensifies
// Periodically triggers random Randomat events for the duration of this event
ttt_randomat_intensifies 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_intensifies_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_intensifies_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_intensifies_timer 20 //Default: 20 - How often (in seconds) a random event will be triggered.
randomat_intensifies_triggerbyotherrandom 1 //Default: 1 - Allow being triggered by other events like Random xN.

// Ransomat
// Chooses a random person with a buy menu and forces them to buy an item from the shop or else they die
ttt_randomat_ransom 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_ransom_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_ransom_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_ransom_traitorsonly 0 //Default: 0 - Only target Traitors for the event.
randomat_ransom_deathtimer 60 //Default: 60 - The amount of time the person has to buy something.

// Red Light, Green Light
// Hurts a player if they move during a red light
ttt_randomat_redlight 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_redlight_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_redlight_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_redlight_mindelay 3 //Default: 3 - Minimum time for each phase.
randomat_redlight_maxdelay 10 //Default: 10 - Maximum time for each phase.
randomat_redlight_damage 3 //Default: 3 - Amount of damage a player takes per second.

// RISE FROM YOUR GRAVE
// Causes anyone who dies to be resurrected as a Zombie
ttt_randomat_grave 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_grave_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_grave_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_grave_health 30 //Default: 30 - The health that the Zombies respawn with.
randomat_grave_include_dead 1 //Default: 1 - Whether to resurrect dead players at the start.

// RISE FROM YOUR... Bees?
// Dead players become harmless bees
ttt_randomat_specbees 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_specbees_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_specbees_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Rock, Paper, Scissors
// Starts a game of Rock, Paper, Scissors between two players... to the death! A tie results in the players being soulbound to each other.
ttt_randomat_rockpaperscissors 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_rockpaperscissors_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_rockpaperscissors_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_rockpaperscissors_bestof 3 //Default: 3 - How many rounds to play.

// Run For Your Life!
// Hurts a player while they are sprinting
ttt_randomat_runforyourlife 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_runforyourlife_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_runforyourlife_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_runforyourlife_delay 0 //Default: 0.2 - Time between player taking damage.
randomat_runforyourlife_damage 3 //Default: 3 - Amount of damage a player takes.

// Scouts Only
// Forces everyone to use a rifle and lowers everyone's gravity
ttt_randomat_scoutsonly 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_scoutsonly_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_scoutsonly_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_scoutsonly_gravity 0 //Default: 0.1 - The gravity scale.

// Second Chance
// Respawns the first player who is killed as a random vanilla role
ttt_randomat_secondchance 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_secondchance_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_secondchance_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Sharing is Caring
// When a player kills another, their inventory is swapped with their victim's.
ttt_randomat_sharingiscaring 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_sharingiscaring_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_sharingiscaring_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Shh... It's a Secret!
// Runs another random Randomat event without notifying the players. Also silences all future Randomat events while this event is active.
ttt_randomat_secret 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_secret_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_secret_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// SHUT UP!
// Disables all sounds for the duration of the event
ttt_randomat_shutup 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_shutup_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_shutup_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// The Sky is Lava
// Players take damage while they are in the air
ttt_randomat_skyislava 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_skyislava_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_skyislava_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_skyislava_interval 0 //Default: 0.25 - How often (in seconds) damage is done while players are in the air.
randomat_skyislava_damage 1 //Default: 1 - How much damage is done.

// Somebody set us up the bomb
// Gives all traitors C4. If a C4 explodes by running out of time, the traitors win.
ttt_randomat_defusemode 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_defusemode_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_defusemode_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Trickle-Down Economics
// Spent credits are redistributed to other people with shops
ttt_randomat_trickledown 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_trickledown_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_trickledown_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Two Lies and a Truth
// One of these three events has been started... but which one?
ttt_randomat_twolies 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_twolies_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_twolies_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
//randomat_twolies_blocklist  //Default: - The comma-separated list of event IDs to not start. For example: "skyislava,boo".

// Smoke Signals
// Allows dead players to envelope their target in smoke
ttt_randomat_smoke 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_smoke_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_smoke_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_smoke_charge_time 30 //Default: 30 - How many seconds it takes to charge the next attack.
randomat_smoke_time 5 //Default: 5 - How many seconds the smoke lasts.

// So that's it. What, we're some kind of suicide squad? (aka Detonators)
// Gives everyone a detonator for a random other player. When that detonator is used, the target player is exploded.
ttt_randomat_suicide 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_suicide_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_suicide_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Social Distancing
// Does a small amount of damage over time to players who spend too much time close to each other.
ttt_randomat_distancing 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_distancing_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_distancing_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_distancing_timer 10 //Default: 10 - Seconds a player must be near another player before damage starts.
randomat_distancing_interval 2 //Default: 2 - How often damage is done when players are too close.
randomat_distancing_distance 100 //Default: 100 - Distance a player must be from another to be considered "near".
randomat_distancing_damage 1 //Default: 1 - Damage done to each player who is too close.

// Sosig.
// Changes all primary weapon shooting sounds to "Sosig"
ttt_randomat_sosig 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_sosig_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_sosig_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Soulmates
// Pairs random players together. When either of the paired players is killed, the other is automatically killed as well
ttt_randomat_soulmates 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_soulmates_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_soulmates_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_soulmates_affectall 0 //Default: 0 - Whether everyone should have a soulmate.
randomat_soulmates_sharedhealth 0 //Default: 0 - Whether soulmates should have shared health.

// Stick With Me
// Pairs all players with another random player. Does a small amount of damage over time to players who spend too much time away from their partner.
ttt_randomat_stickwithme 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_stickwithme_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_stickwithme_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_stickwithme_warning_timer 30 //Default: 30 - Time a player has to find their partner at the start of the event.
randomat_stickwithme_damage_timer 10 //Default: 10 - Time a player must be away from their partner before damage starts.
randomat_stickwithme_damage_interval 2 //Default: 2 - How often damage is done when partners are too far".
randomat_stickwithme_damage_distance 200 //Default: 200 - Distance a player must be from their partner to be considered "near".
randomat_stickwithme_damage_amount 1 //Default: 1 - Damage done to each player who is too far.
randomat_stickwithme_highlight 1 //Default: 1 - Whether to highlight player partners.

// Stop, I'm Bees!
// Spawns a configurable number of bees when a player is killed
ttt_randomat_imbees 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_imbees_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_imbees_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_imbees_count 3 //Default: 3 - The amount of bees spawned when someone dies.

// Sudden Death!
// Changes everyone to have only 1 health
ttt_randomat_suddendeath 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_suddendeath_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_suddendeath_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// T-Rex Vision
// Your vision is now based on movement. All players who aren't moving are invisible
ttt_randomat_trexvision 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_trexvision_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_trexvision_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_trexvision_reveal_time 5 //Default: 5 - How long to reveal a player who shoots their gun.

// Taking Inventory
// Swaps player inventories periodically throughout the round. There are some caveats to how this event interacts with special roles:

// Non-prime Zombies are excluded
// Prime Zombies will keep their claws
// Players who received a Killer's inventory will be given a crowbar instead of the Killer's knife/crowbar
ttt_randomat_inventory 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_inventory_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_inventory_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_inventory_timer 15 //Default: 15 - Time between inventory swaps.

// That Doesn't Sound Right
// Shuffles weapon sounds at the start of the event
ttt_randomat_soundright 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_soundright_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_soundright_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
//randomat_soundright_blocklist  //Default: weapon_pulserif,weapon_ttt_dislocator,tfa_jetgun - The comma-separated list of weapon IDs to not use for sounds. For example: "weapon_pulserif,weapon_ttt_dislocator".

// The 'bar has been raised!
// Increases the damage and push force of the crowbar
ttt_randomat_crowbar 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_crowbar_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_crowbar_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_crowbar_damage 2 //Default: 2.5 - Damage multiplier for the crowbar.
randomat_crowbar_push 30 //Default: 30 - Push force multiplier for the crowbar.

// The Cake is a Lie
// Rains cakes down around players which have a 50/50 chance or either healing or hurting when eaten
ttt_randomat_cakes 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_cakes_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_cakes_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_cakes_count 2 //Default: 2 - Number of cakes spawned per person.
randomat_cakes_range 200 //Default: 200 - Distance cakes spawn from the player.
randomat_cakes_timer 60 //Default: 60 - Time between cake spawns, in seconds.
randomat_cakes_health 25 //Default: 25 - The amount of health the player will regain from eating a cake.
randomat_cakes_damage 25 //Default: 25 - The amount of health the player will lose from eating a cake.
randomat_cakes_damage_time 30 //Default: 30 - The amount of time the player will take damage after eating a cake, in seconds.
randomat_cakes_damage_interval 1 //Default: 1 - How often the player will take damage after eating a cake, in seconds.
randomat_cakes_damage_over_time 1 //Default: 1 - The amount of health the player will lose each tick after eating a cake.

// There's a cooldown on the jump!
// Players can only jump once every configurable number of seconds
ttt_randomat_jumpcooldown 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_jumpcooldown_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_jumpcooldown_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_jumpcooldown_length 5 //Default: 5 - The length of the jump cooldown.

// There's this game my father taught me years ago, it's called "Switch"
// Randomly switches positions of two players on a configurable interval
ttt_randomat_switch 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_switch_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_switch_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_switch_timer 15 //Default: 15 - How often players are switched.

// They have a cave troll
// Chooses a random traitor and makes them a strong giant with a club. Other random players are chosen to be smaller and given knives
ttt_randomat_cavetroll 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_cavetroll_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_cavetroll_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_cavetroll_troll_scale 1.5 //Default: 1.5 - The scale factor to use for the troll.
randomat_cavetroll_troll_damage 50 //Default: 50 - How much damage the troll's "club" should do.
randomat_cavetroll_troll_health 150 //Default: 150 - The amount of health the troll should have.
randomat_cavetroll_hobbit_scale 0.5 //Default: 0.5 - The scale factor to use for the hobbits.
randomat_cavetroll_hobbit_pct 0.34 //Default: 0.34 - The percent of non-traitors to be hobbits.
randomat_cavetroll_hobbit_damage 20 //Default: 20 - How much damage the hobbits' "swords" should do.

// Time Warp
// Causes everything (movement, firing speed, timers, etc.) to run a configurable amount faster than normal and intensifies on a configurable interval
ttt_randomat_timewarp 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_timewarp_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_timewarp_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_timewarp_scale 50 //Default: 50 - The percentage the speed should increase. Treated as an additive increase on multiple uses (e.g. 1.0 -> 1.5 -> 2.0 (1.5 + 0.5) rather than 1.0 -> 1.5 -> 2.25 (1.5 + 1.5x0.5).
randomat_timewarp_scale_max 8 //Default: 8 - The maximum scale the speed should increase to.
randomat_timewarp_timer 15 //Default: 15 - How often (in seconds) the speed will be increased.

// Total Magnetism
// When a player dies, all nearby players will be pulled toward their corpse
ttt_randomat_magnetism 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_magnetism_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_magnetism_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_magnetism_radius 100 //Default: 1000 - The radius around the dead player for magnetism.

// Total Mayhem
// Causes players to explode when killed
ttt_randomat_mayhem 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_mayhem_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_mayhem_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Try your best...
// Gives each player a random pistol and main weapon that they cannot drop
ttt_randomat_randomweapon 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_randomweapon_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_randomweapon_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Typeracer
// Type each word/phrase in chat within the configurable amount of time OR DIE!
ttt_randomat_typeracer 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_typeracer_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_typeracer_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_typeracer_timer 15 //Default: 15 - The amount of time players have to type each given word.
randomat_typeracer_kill_wrong 1 //Default: 1 - Whether to kill players who type the word incorrectly.
// Custom Phrases
// This event also supports custom phrases to be added by server administrators. This allows servers to use their own phrases that may not work in the core event by default -- things like inside jokes or phrases that use other alphabets. The custom phrases are stored, one per line, in the data/randomat/typeracer.txt file on the server.
// You can also use the following commands in the server console to help you manage the custom phrases:
//randomat_typeracer_add_phrase {phrase} - Adds the given phrase to the list of custom phrases (if it doesn't exist) and updates the data/randomat/typeracer.txt file.
//randomat_typeracer_remove_phrase {phrase} - Removes the given phrase from the list of custom phrases (if it exists) and updates the data/randomat/typeracer.txt file.
//randomat_typeracer_list_phrases - Lists all of the current custom phrases.

// Variety is the Spice of Life
// Prevents players from killing using the same type of damage (bullets, crowbar, etc.) twice in a row
ttt_randomat_variety 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_variety_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_variety_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// Wasteful!
// Every gun shot uses two bullets
ttt_randomat_wasteful 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_wasteful_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_wasteful_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// We learned how to heal over time, its hard, but definitely possible... (aka Regeneration)
// Causes players to slowly regenerate lost health over time
ttt_randomat_regeneration 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_regeneration_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_regeneration_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_regeneration_delay 10 //Default: 10 - How long after taking damage you will start to regen health.
randomat_regeneration_health 1 //Default: 1 - How much health per second you heal.

// We've updated our privacy policy.
// Alerts all players when an item is bought from a shop
ttt_randomat_privacy 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_privacy_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_privacy_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.

// What? Moon Gravity on Earth?
// Changes the gravity of each player to the configurable scale
ttt_randomat_moongravity 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_moongravity_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_moongravity_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_moongravity_gravity 0.1 //Default: 0.1 - The gravity scale.

// What did I find in my pocket?
// Gives each player a random buyable weapon
ttt_randomat_pocket 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_pocket_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_pocket_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
//randomat_pocket_blocklist  //Default: - The comma-separated list of weapon IDs to not give out. For example: "ttt_m9k_harpoon,weapon_ttt_slam".

// What gamemode is this again? (aka Murder)
// Changes the rules so the round plays like the Murder gamemode:
// Detectives are given a revolver which will kill players in 1 shot
// Traitors are given a knife that does a configurable amount of damage
// Non-traitor players can gather gun parts (by picking up guns off the ground) to build themselves a revolver
// Traitors destroy all gun parts they find
// Player roles are also adjusted when this event begins:
// Traitor and Monster team members are converted to vanilla traitors
// Detectives and Killers are left alone
// Everyone else is converted to a vanilla innocent
ttt_randomat_murder 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_murder_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_murder_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_murder_pickups_ratio 0.75 //Default: 0.75 - Ratio of weapons required to get a revolver. Value = (ConVarValue x TotalWeapons)/Players.
randomat_murder_knifespeed 1.2 //Default: 1.2 - Player move speed multiplier whilst knife is held.
randomat_murder_knifedmg 50 //Default: 50 - Damage of the traitor's knife.
randomat_murder_highlight_gun 1 //Default: 1 - Whether to highlight dropped revolvers.
randomat_murder_allow_shop 0 //Default: 0 - Whether to allow the shop to be used.

// You can only jump once.
// Kills any player who jumps a second time after this event has triggered
ttt_randomat_jump 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_jump_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_jump_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_jump_spam 0 //Default: 0 - Whether to show the message again for a player who doesn't die.
randomat_jump_kill_blast_immune 1 //Default: 1 - Whether to kill players who are immune to blast damage.

// Zom-Bees!
// Spawns bees who spread zombiism to their victims. See the "RISE FROM YOUR GRAVE" event for additional configuration.
ttt_randomat_zombees 1 //Default: 1 - Whether this event is enabled.
ttt_randomat_zombees_min_players 0 //Default: 0 - The minimum number of players required for this event to start.
ttt_randomat_zombees_weight -1 //Default: -1 - The weight this event should use during the randomized event selection process.
randomat_zombees_count 1 //Default: 1 - The number of bees spawned per player.